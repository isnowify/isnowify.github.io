<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>isnowify&#39;s blog</title>
  
  <subtitle>Yet another ordinary site</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.isnowify.com/"/>
  <updated>2020-09-17T15:48:55.086Z</updated>
  <id>http://www.isnowify.com/</id>
  
  <author>
    <name>isnowify</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Homebrew 安装不完全指北</title>
    <link href="http://www.isnowify.com/2020/09/17/a-simple-guide-to-install-homebrew/"/>
    <id>http://www.isnowify.com/2020/09/17/a-simple-guide-to-install-homebrew/</id>
    <published>2020-09-17T14:59:07.000Z</published>
    <updated>2020-09-17T15:48:55.086Z</updated>
    
    <content type="html"><![CDATA[<h3 id="why-homebrew">Why Homebrew？</h3><p>Homebrew官网 <a href="https://brew.sh/index_zh-cn" class="uri" target="_blank" rel="noopener">https://brew.sh/index_zh-cn</a> 对Homebrew的定义是：</p><blockquote><p><strong>macOS（或 Linux）缺失的软件包的管理器</strong></p></blockquote><p>Homebrew 类似于Linux上的yum与apt-get。有了Homebrew，你可以轻松使用进行以下操作：</p><ul><li>使用一句命令自动下载，安装或卸载所需要的软件与依赖包</li><li>轻松管理服务的停止与启动</li></ul><p>以CPT103课程需要用到的mysql为例，有了Homebrew，你只需要在终端中键入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql</span><br></pre></td></tr></table></figure><p>就可以一键完成mysql的下载与环境配置. Homebrew还会在安装结束时主动显示提示用户可能需要的下一步操作(caveats)。下图是使用Homebrew安装完mysql后现实的caveats，提示用户修改mysql的默认密码和启动服务的命令。</p><p><img data-src="https://i.loli.net/2020/09/17/b8ugkwcJ4sKhSf1.png"></p><p>于此同时，由于清华大学Tuna协会提供了Homebrew的国内高速镜像，因此替换完镜像后的Homebrew下载速度奇快，再也不需要通过魔法上网获取所需要的软件。</p><h3 id="how-to-install">How to install？</h3><h4 id="安装开发工具包">安装开发工具包</h4><p>首先需要确保你的Mac中已经安装好开发工具包，打开“系统实用工具”中的“终端”，在终端中输入 <code>xcode-select --install</code> ，系统会自动安装好缺少的开发工具。如果你遇到了下图的提示，说明你已经安装好了开发工具包，可以直接跳到下一步操作。</p><p>另外，由于Homebrew只能通过终端输入命令进行交互，因此建议把终端放在Dock栏中，以便快速打开。</p><p><img data-src="https://i.loli.net/2020/09/17/MblJGVqjnZwg5dp.png"></p><h4 id="安装homebrew">安装Homebrew</h4><p>如果你会魔法⚡⚡，或者身在国际互联网畅通无阻的国家，你可以直接在终端中键入Homebrew官方的命令进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><p>如果你只是一只<del>还没有写完作业的</del>苦逼学生，你可能需要使用国内镜像进行快速安装，小猿提供了修改后的脚本，让你可以使用位于Tuna清华大学的服务器下载安装Homebrew，以下是食用方式：</p><ol type="1"><li><p>使用浏览器下载这个文件： <a href="https://gitee.com/isnowify/xjtluxiaoyuan/raw/master/installbrew.sh" class="uri" target="_blank" rel="noopener">https://gitee.com/isnowify/xjtluxiaoyuan/raw/master/installbrew.sh</a></p></li><li><p>在终端中输入以下命令（留意最后的空格）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HOMEBREW_CORE_GIT_REMOTE=https://mirrors.tuna.tsinghua.edu.cn/git/Homebrew/Homebrew-core.git bash</span><br></pre></td></tr></table></figure><p>并将刚刚下载好的文件拖入终端内</p></li></ol><p>按下回车键，终端便开始<del>腹泻式</del>安装Homebrew，期间可能会需要输入你的Mac密码，按照提示操作即可。我们录制了一个小小的GIF，帮助你更好的完成Homebrew的安装</p><p><img data-src="https://i.loli.net/2020/09/17/wbpk7x6Ff8Ns5Py.gif"></p><p>耐心等待一会，当我们看到<code>Installation successful</code>, 说明Homebrew已经成功安装。</p><h3 id="替换homebrew下载源">替换Homebrew下载源</h3><p>安装好Homebrew以后，我们需要替换Homebrew的下载源，让Homebrew下载软件包的速度<del>比香港记者还快</del>。</p><h4 id="替换bottle源">替换bottle源</h4><p>依次在终端中输入以下两行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/Homebrew-bottles'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h4 id="替换core与cask源">替换core与cask源</h4><p>依次逐行键入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew 程序本身，Homebrew/Linuxbrew 相同</span></span><br><span class="line">git -C <span class="string">"<span class="variable">$(brew --repo)</span>"</span> remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下针对 mac OS 系统上的 Homebrew</span></span><br><span class="line">git -C <span class="string">"<span class="variable">$(brew --repo Homebrew/core)</span>"</span> remote <span class="built_in">set</span>-url origin </span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/git/Homebrew/Homebrew-core.git</span><br><span class="line">git -C <span class="string">"<span class="variable">$(brew --repo Homebrew/cask)</span>"</span> remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/Homebrew/Homebrew-cask.git</span><br><span class="line">git -C <span class="string">"<span class="variable">$(brew --repo Homebrew/cask-fonts)</span>"</span> remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/Homebrew/Homebrew-cask-fonts.git</span><br><span class="line">git -C <span class="string">"<span class="variable">$(brew --repo Homebrew/cask-drivers)</span>"</span> remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/Homebrew/Homebrew-cask-drivers.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更换后测试工作是否正常</span></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><p>至此，我们完成了Homebrew的下载，安装与源替换。</p><h3 id="一些常用命令">一些常用命令</h3><h4 id="安装卸载软件">1.安装卸载软件</h4><ol type="1"><li><code>brew --version</code>或者<code>brew -v</code> 显示brew版本信息</li><li><code>brew install &lt;name&gt;</code> 安装指定软件</li><li><code>brew unistall &lt;name&gt;</code> 卸载指定软件</li><li><code>brew list</code> 显示所有的已安装的软件</li><li><code>brew search text</code> 搜索本地远程仓库的软件，已安装会显示绿色的勾</li><li><code>brew search /text/</code> 使用正则表达式搜软件</li></ol><h4 id="升级软件相关">2. 升级软件相关</h4><ol type="1"><li><code>brew update</code> 自动升级Homebrew（从github下载最新版本）</li><li><code>brew outdated</code> 检测已经过时的软件</li><li><code>brew upgrade</code> 升级所有已过时的软件，即列出的以过时软件</li><li><code>brew upgrade &lt;formula&gt;</code>升级指定的软件</li><li><code>brew pin &lt;formula&gt;</code> 禁止指定软件升级</li><li><code>brew unpin &lt;formula&gt;</code> 解锁禁止升级</li><li><code>brew upgrade --all</code> 升级所有的软件包，包括未清理干净的旧版本的包</li></ol><h4 id="清理相关">3. 清理相关</h4><p>Homebrew再升级软件时候不会清理相关的旧版本，在软件升级后我们可以使用如下命令清理</p><ol type="1"><li><p><code>brew cleanup -n</code> 列出需要清理的内容</p></li><li><p><code>brew cleanup &lt;formula&gt;</code> 清理指定的软件过时包</p></li><li><p><code>brew cleanup</code> 清理所有的过时软件</p></li><li><p><code>brew unistall &lt;formula&gt;</code> 卸载指定软件</p></li><li><p><code>brew unistall &lt;fromula&gt; --force</code> 彻底卸载指定软件，包括旧版本</p></li></ol><h3 id="写在最后">写在最后</h3><p>这篇文章也可以在<a href="https://isnowify.com" class="uri" target="_blank" rel="noopener">https://isnowify.com</a>上找到，更加适合电脑端阅读。</p><h3 id="reference">Reference</h3><ol type="1"><li>Homebrew 替换国内镜像源 <a href="https://frankindev.com/2020/05/15/replace-Homebrew-source/" class="uri" target="_blank" rel="noopener">https://frankindev.com/2020/05/15/replace-Homebrew-source/</a></li><li>HomeBrew常规使用教程： <a href="https://juejin.im/post/6844903549051076622" class="uri" target="_blank" rel="noopener">https://juejin.im/post/6844903549051076622</a></li><li>Homebrew官网： <a href="https://brew.sh/index_zh-cn" class="uri" target="_blank" rel="noopener">https://brew.sh/index_zh-cn</a></li><li>清华大学Tuna镜像源Homebrew页面：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/Homebrew/" class="uri" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/Homebrew/</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;why-homebrew&quot;&gt;Why Homebrew？&lt;/h3&gt;
&lt;p&gt;Homebrew官网 &lt;a href=&quot;https://brew.sh/index_zh-cn&quot; class=&quot;uri&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;htt
      
    
    </summary>
    
    
      <category term="西浦小猿" scheme="http://www.isnowify.com/tags/%E8%A5%BF%E6%B5%A6%E5%B0%8F%E7%8C%BF/"/>
    
      <category term="Homebrew" scheme="http://www.isnowify.com/tags/Homebrew/"/>
    
      <category term="Mac" scheme="http://www.isnowify.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Java 随缘杂谈</title>
    <link href="http://www.isnowify.com/2020/09/10/java-on-the-go/"/>
    <id>http://www.isnowify.com/2020/09/10/java-on-the-go/</id>
    <published>2020-09-10T02:39:29.000Z</published>
    <updated>2020-09-10T17:17:41.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-随缘杂谈"><a href="#Java-随缘杂谈" class="headerlink" title="Java 随缘杂谈"></a>Java 随缘杂谈</h1><blockquote><p>小猿排版大升级！</p></blockquote><p>CPT 105 第一周的课时已经差不多结束了，小猿根据一些同学提的问题写了这篇杂谈。这个系列是根据 CPT105 的教学进度以及同学提问而写的技术向杂谈，一到两周一更，比较随性，不成系统。以后的更新将以专题为主。</p><p>在阅读本文之前请先仔细阅读 CPT105 Tutorial以及课件, 并且观看课程视频。</p><h3 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK, JRE,  JVM"></a>JDK, JRE,  JVM</h3><p>你可能会对这三个名词感到有些糊涂，先给结论: JDK 包含 JRE ，JRE 包含 JVM</p><p>JDK: Java Development Kit  Java开发工具包，提供了Java运行环境和Java开发工具</p><p>JRE: Java Runtime Environment  Java运行时环境，安装了JavaRE 的设备可以运行Java程序</p><p>JVM: Java Virtual Machine Java虚拟机，Java代码事实上运行在JVM中。JVM是Java跨平台特性实现的载体，Java的核心竞争力所在，这里不铺开讲。有兴趣的自行百度。</p><h3 id="Java-程序的组织结构"><a href="#Java-程序的组织结构" class="headerlink" title="Java 程序的组织结构"></a>Java 程序的组织结构</h3><p>Java中的源文件以 项目(project) - 包(package) - 源文件(.java文件) 的层级结构组织起来，我们就是在源文件里敲代码。</p><p><img alt data-src="https://i.loli.net/2020/09/11/Gxa4O5psATQXENn.jpg"></p><h3 id="类-class-和-java-文件的关系"><a href="#类-class-和-java-文件的关系" class="headerlink" title="类 (class) 和 .java 文件的关系"></a>类 (class) 和 .java 文件的关系</h3><p>现阶段可以暂时认为一个.java 文件就是一个 class</p><p>作为一门面向对象编程 (OOP) 的语言，Java中的<strong>一切</strong>依托于类存在 </p><p><img alt data-src="https://i.loli.net/2020/09/11/uyZN6bl4RIG9BDn.png"></p><h3 id="方法-method"><a href="#方法-method" class="headerlink" title="方法 method"></a>方法 method</h3><p>方法分为数个部分：修饰符，返回类型，方法签名 (method signature) 和方法体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">访问权限修饰符 是否为静态方法 返回值类型 方法名称(参数表)</span><br><span class="line">&#123;</span><br><span class="line"> 方法体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">myMethod</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello\nWorld"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中方法签名包含了方法名称和参数表。方法的创建和调用应该会在下周学到，不用操之过急，这里只给一个基本的概念。</p><h3 id="变量-variable"><a href="#变量-variable" class="headerlink" title="变量 (variable)"></a>变量 (variable)</h3><h3 id="可执行Java程序-amp-主类-main-class"><a href="#可执行Java程序-amp-主类-main-class" class="headerlink" title="可执行Java程序 &amp; 主类 (main class)"></a><strong>可执行</strong>Java程序 &amp; 主类 (main class)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">//my code</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main()方法 (method) 是java程序执行的起点，所有含有main()方法的java源文件都是可执行(run)的。</p><p>NetBeans 提供两种执行模式，一是单独执行当前源文件( 前提是当前源文件中含有main()方法 ):</p><p><img alt data-src="https://i.loli.net/2020/09/11/L51Flvdqk2KCQ3Z.png"></p><p>另一种是执行当前项目:</p><p><img alt data-src="https://i.loli.net/2020/09/11/uFo3LBv6jpAiYUd.png"></p><p>项目的执行从当前项目的主类 (main class) 的 main()方法开始，Run Project之后的括号里就注明了当前的主类(Lab_01).</p><p>所有含有main()方法的源文件都有资格成为主类，而相应的，<strong>在执行项目时，只有主类的 main() 方法会被执行。</strong></p><p><strong>NetBeans 中如何修改主类</strong>:</p><p><img alt data-src="https://i.loli.net/2020/09/11/wT37JEVWAslxPHb.png"></p><p><img alt data-src="https://i.loli.net/2020/09/11/vdeslbTSH92zQJ8.png"></p><p>点击Browse便可以查看所有有资格成为主类的类,并自定义主类</p><p>Java中变量有八个基本类型:</p><p>整数类型：int (整型), long（长整型）, short（短整型）, byte (字节)</p><p>字符类型：char</p><p>布尔量：boolean</p><p>浮点数（小数）: float（单精度浮点类型）, double（双精度浮点类型）</p><p>数据类型属于编程基础，但是内容又比较多，过两天专门写一篇文章讲吧(咕咕咕)。</p><p>变量需要定义，定义后的变量可以赋值，同名变量不可以重复定义，变量有生存期和作用域。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num1 = <span class="number">2</span>;<span class="comment">//定义</span></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">3</span>;<span class="comment">//定义</span></span><br><span class="line">num1 = <span class="number">10</span>; <span class="comment">//赋值</span></span><br><span class="line">num1 = num2; <span class="comment">//赋值</span></span><br></pre></td></tr></table></figure><p><strong>生存期</strong>和<strong>作用域</strong>以及相关的<strong>变量类型</strong>过两天专门写一篇文章讲(咕咕咕)。</p><h3 id="System-out-println"><a href="#System-out-println" class="headerlink" title="System.out.println()"></a>System.out.println()</h3><p><code>System.out.println()</code>是标准输出家族中常用的方法之一。其作用是在<code>output console</code>中输出括号中的内容并换行，如果要输出文本内容，记得加双引号。</p><p><code>System.out.print()</code>一样会输出括号中的内容，但是不会自动换行。</p><p>手动换行的方式是在文本中插入 \n , 有兴趣的可以百度逃逸字符自行了解。</p><p>可以运行 <code>System.out.print(&quot;Hello\nWorld&quot;);</code></p><h3 id="用-连接文本"><a href="#用-连接文本" class="headerlink" title="用 + 连接文本"></a>用 + 连接文本</h3><p>加号是Java唯一的重载运算符, 可以用来链接文本内容，在Java中，我们称文本内容为字符串 (String)，当加号和字符串相邻出现时，会自动调用重载后的功能。</p><p>可以运行下面的语句体会与字符串一起使用时+号的功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"6"</span> + <span class="string">"3"</span>);</span><br><span class="line">System.out.println(<span class="string">"6"</span> + <span class="number">3</span>);</span><br><span class="line">System.out.println(<span class="number">6</span> + <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="从源文件到可执行文件"><a href="#从源文件到可执行文件" class="headerlink" title="从源文件到可执行文件"></a>从源文件到可执行文件</h3><p>本周 CPT105 的教案中提及了<code>.java</code> 文件和 <code>.class</code> 文件。编程语言更接近人类的自然语言，计算机是无法”理解”的，计算机 (cpu) 只能”理解”二进制指令。编程语言发展至今，已经在二进制语言的基础上进行了多层抽象，全然见不到二进制指令的影子了，因此人机之间需要”翻译者”，这个”翻译者”就是编译器，而翻译的过程就称为编译 (compile)。<code>.class</code> 文件可以简单理解为 <code>.java</code> 文件经过翻译后的产物。</p><p>而事实上，<code>.class</code>文件被称作字节码(byte code)，是提供给JVM执行的。</p><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><p>编程语言中的运算符分为单目运算符，双目运算符，以及三元运算符</p><p>基本的: + 加 - 减 *乘 /除 %取余</p><p>自增自减运算符(单目): ++ ，–</p><p><code>a++</code> 等价于 <code>a = a+1</code>， <code>a--</code> 等价于 <code>a = a-1</code> </p><p>逻辑运算符:  &gt;, &lt;, &gt;=, &lt;=, &amp;&amp;, ||</p><p>按位运算:  &lt;&lt; 左移  &gt;&gt; 右移  ^ 按位异或 &amp;按位与 | 按位或 </p><h3 id="独自探索java"><a href="#独自探索java" class="headerlink" title="独自探索java"></a>独自探索java</h3><p><a href="https://docs.oracle.com/en/java/javase/12/docs/api/index.html" target="_blank" rel="noopener">https://docs.oracle.com/en/java/javase/12/docs/api/index.html</a></p><p>这是Java官方的API文档，可能你现在看不懂他，但是在未来他必然会成为你的良师益友。想要自主学习Java的同学可以选择 《Java核心技术 卷 1》，或者观看B站，Mooc等平台的课程。</p><blockquote><p>马上百粉啦，小猿正在给各位老粉整理 pdf 教材作为福利，现在关注你也是老粉！</p><p>有任何问题可以在后台给小猿留言。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java-随缘杂谈&quot;&gt;&lt;a href=&quot;#Java-随缘杂谈&quot; class=&quot;headerlink&quot; title=&quot;Java 随缘杂谈&quot;&gt;&lt;/a&gt;Java 随缘杂谈&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;小猿排版大升级！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="西浦小猿" scheme="http://www.isnowify.com/tags/%E8%A5%BF%E6%B5%A6%E5%B0%8F%E7%8C%BF/"/>
    
      <category term="Java" scheme="http://www.isnowify.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.isnowify.com/2019/08/20/hello-world/"/>
    <id>http://www.isnowify.com/2019/08/20/hello-world/</id>
    <published>2019-08-20T03:15:01.305Z</published>
    <updated>2019-08-06T13:33:01.675Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
